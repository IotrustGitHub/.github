#!/bin/sh

# Define the commit message patterns and error message
pattern='(^#[0-9]+: .+)|(^(DEV-T-)[0-9]+ .+)'
error_message="Error: commit 메시지 형식이 잘못 되었습니다.
commit msg는 다음 형식 중 하나로 작성해주세요:
1. #{이슈번호}: {내용}
2. DEV-T-{번호}_{내용}
예:
1. #21: stack prepareTransaction 구현
2. DEV-T-21 stack prepareTransaction 구현"

# Function to check commit message in Unix-like systems
check_commit_message_unix() {
  commit_message=$(cat "$1")
  if echo "$commit_message" | grep -qE "$pattern"; then
    exit 0
  else
    echo "$error_message"
    exit 1
  fi
}

# Function to check commit message in Windows using PowerShell
check_commit_message_windows() {
  # Escape the pattern and error message for PowerShell
  escaped_pattern=$(printf '%s\n' "$pattern" | sed 's/\\/\\\\/g; s/\//\\\//g')
  escaped_error_message=$(printf '%s\n' "$error_message" | sed 's/"/`"/g')

  powershell.exe -NoProfile -ExecutionPolicy Bypass -Command "
    \$pattern = \"$escaped_pattern\"
    \$commitMessage = Get-Content -Path '$1'
    \$errorMessage = \"$escaped_error_message\"

    if (\$commitMessage -match \$pattern) {
      exit 0
    } else {
      Write-Host \"\$errorMessage\" -ForegroundColor Red
      exit 1
    }
  "
  exit $?
}

# Check if running on Windows
if [ -n "$WINDIR" ]; then
  check_commit_message_windows "$1"
else
  check_commit_message_unix "$1"
fi